X6IV1GX, X6BIV1GX) %>%
as_tibble() %>%
drop_na() %>%
mutate(voteMacron = ifelse(X6IV1GX!=8 & X6BIV1GX==8, 1, 0))  %>%
mutate(inquietude = inquietUKR2 - inquietUKR2)
VAGUE6BIS %>%
select(INDEX, SEXE = X6SEXE, AGE = X6AGE, EDUC = X6EDUR4,
inquietUKR1 = X6UKR1, inquietUKR2 = X6BUKR1,
X6IV1GX, X6BIV1GX) %>%
as_tibble() %>%
drop_na() %>%
mutate(voteMacron = ifelse(X6IV1GX!=8 & X6BIV1GX==8, 1, 0))  %>%
mutate(inquietude = inquietUKR2 - inquietUKR2) %>%
hist(inquietude)
VAGUE6BIS %>%
select(INDEX, SEXE = X6SEXE, AGE = X6AGE, EDUC = X6EDUR4,
inquietUKR1 = X6UKR1, inquietUKR2 = X6BUKR1,
X6IV1GX, X6BIV1GX) %>%
as_tibble() %>%
drop_na() %>%
mutate(voteMacron = ifelse(X6IV1GX!=8 & X6BIV1GX==8, 1, 0))  %>%
mutate(inquietude = inquietUKR2 - inquietUKR2) %>%
with(hist(inquietude))
VAGUE6BIS %>%
select(INDEX, SEXE = X6SEXE, AGE = X6AGE, EDUC = X6EDUR4,
inquietUKR1 = X6UKR1, inquietUKR2 = X6BUKR1,
X6IV1GX, X6BIV1GX) %>%
as_tibble() %>%
drop_na() %>%
mutate(voteMacron = ifelse(X6IV1GX!=8 & X6BIV1GX==8, 1, 0))  %>%
mutate(inquietude = inquietUKR2 - inquietUKR2) %>%
with(table(inquietude))
VAGUE6BIS %>%
select(INDEX, SEXE = X6SEXE, AGE = X6AGE, EDUC = X6EDUR4,
inquietUKR1 = X6UKR1, inquietUKR2 = X6BUKR1,
X6IV1GX, X6BIV1GX) %>%
as_tibble() %>%
drop_na() %>%
mutate(voteMacron = ifelse(X6IV1GX!=8 & X6BIV1GX==8, 1, 0))  %>%
mutate(inquietude = inquietUKR2 - inquietUKR1) %>%
with(hist(inquietude))
VAGUE6BIS %>%
select(INDEX, SEXE = X6SEXE, AGE = X6AGE, EDUC = X6EDUR4,
inquietUKR1 = X6UKR1, inquietUKR2 = X6BUKR1,
X6IV1GX, X6BIV1GX) %>%
as_tibble() %>%
drop_na() %>%
mutate(voteMacron = ifelse(X6IV1GX!=8 & X6BIV1GX==8, 1, 0))  %>%
mutate(inquietude = inquietUKR2 - inquietUKR1) -> test
lm(voteMacron ~ inquietude + SEXE + AGE + EDUC)
lm(voteMacron ~ inquietude + SEXE + AGE + EDUC, data = test)
texreg::screenreg(lm(voteMacron ~ inquietude + SEXE + AGE + EDUC, data = test))
texreg::screenreg(glm(voteMacron ~ inquietude + SEXE + AGE + EDUC, data = test, family = "binomial"))
texreg::screenreg(glm(voteMacron ~ inquietude, data = test, family = "binomial"))
texreg::screenreg(glm(voteMacron ~ inquietude + SEXE + AGE + EDUC, data = test, family = "binomial"))
test
install.packages("panelr", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
test
VAGUE6BIS %>%
select(INDEX, SEXE = X6SEXE, AGE = X6AGE, EDUC = X6EDUR4,
X6UKR1, X6BUKR1,
X6IV1GX, X6BIV1GX) %>%
as_tibble() %>%
drop_na() %>%
mutate(voteMacron = ifelse(X6IV1GX!=8 & X6BIV1GX==8, 1, 0))  %>%
mutate(inquietude = inquietUKR2 - inquietUKR1)
VAGUE6BIS %>%
select(INDEX, SEXE = X6SEXE, AGE = X6AGE, EDUC = X6EDUR4,
X6UKR1, X6BUKR1,
X6IV1GX, X6BIV1GX) %>%
as_tibble() %>%
drop_na()
VAGUE6BIS %>%
select(INDEX, SEXE = X6SEXE, AGE = X6AGE, EDUC = X6EDUR4,
X6UKR1, X6BUKR1,
X6IV1GX, X6BIV1GX) %>%
as_tibble() %>%
drop_na() %>%
mutate(voteMacron = ifelse(X6IV1GX!=8 & X6BIV1GX==8, 1, 0))  %>%
mutate(inquietude = X6BUKR1 - X6UKR1)
VAGUE6BIS %>%
select(INDEX, SEXE = X6SEXE, AGE = X6AGE, EDUC = X6EDUR4,
X6UKR1, X6BUKR1,
X6IV1GX, X6BIV1GX) %>%
as_tibble() %>%
drop_na() %>%
mutate(voteMacron = ifelse(X6IV1GX!=8 & X6BIV1GX==8, 1, 0))  %>%
mutate(inquietude = X6BUKR1 - X6UKR1) -> test
panelr::long_panel(test, prefix = "X6", begin = 1, end = 2, label_location = "start")
panelr::long_panel(test, prefix = "X6", begin = 1, end = 2, label_location = "beginning")
?long_nale
?long_panel
dput(pacman::p_lib())
rio::import("./data/P2022_Resultats_Communes_T1.csv") -> communes2022
rio::import("~/Dropbox/presidentielle2022/presidentielle2022/data/P2022_Resultats_Communes_T1.csv") -> communes2022
glimpse(communes2022)
library(tidyverse)
glimpse(communes2022)
pres_2022_R1_communes <- read_excel("./data-raw/2022/resultats-par-niveau-subcom-t1-france-entiere.xlsx", guess_max = 36000) %>% mutate(Inscrits = as.numeric(Inscrits))
pres_22_R1_communes_cleaned <- lire(pres_2022_R1_communes,
keep = c("Code du département", "Code de la commune", "Libellé de la commune",
"Inscrits", "Abstentions", "Exprimés", "Blancs", "Nuls"),
col = seq(22, 99, 7),
gap = 2)
library(readxl) # read excel files
library(stringr) # manipulate string of characters
library(LireMinInterieur) # transform electoral files
library(tidyverse) #
pres_2022_R1_communes <- read_excel("./data-raw/2022/resultats-par-niveau-subcom-t1-france-entiere.xlsx", guess_max = 36000) %>% mutate(Inscrits = as.numeric(Inscrits))
pres_22_R1_communes_cleaned <- lire(pres_2022_R1_communes,
keep = c("Code du département", "Code de la commune", "Libellé de la commune",
"Inscrits", "Abstentions", "Exprimés", "Blancs", "Nuls"),
col = seq(22, 99, 7),
gap = 2)
setwd("~/Dropbox/presidentielle2022/presidentielle2022")
pres_2022_R1_communes <- read_excel("./data-raw/2022/resultats-par-niveau-subcom-t1-france-entiere.xlsx", guess_max = 36000) %>% mutate(Inscrits = as.numeric(Inscrits))
pres_22_R1_communes_cleaned <- lire(pres_2022_R1_communes,
keep = c("Code du département", "Code de la commune", "Libellé de la commune",
"Inscrits", "Abstentions", "Exprimés", "Blancs", "Nuls"),
col = seq(22, 99, 7),
gap = 2)
pres_22_R1_communes_cleaned %>%
mutate(CodeDepartement = str_pad(string = `Code du département`, width = 2, side = "left", pad = "0")) %>% # has to be in a format like "02"
mutate(CodeCommune = str_pad(string = `Code de la commune`, width = 3, side = "left", pad = "0")) %>%
mutate(CodeInsee = paste0(CodeDepartement, CodeCommune)) %>%  # unique commune ID
mutate(Votants = Inscrits - Abstentions) %>%
mutate(Votants_ins = Votants / Inscrits * 100) %>%
mutate(Abstentions_ins = Abstentions / Inscrits * 100) %>%
mutate(Blancs_ins = Blancs/ Inscrits * 100) %>%
mutate(Blancs_vot = Blancs / Votants * 100) %>%
mutate(Nuls_ins = Nuls / Inscrits * 100) %>%
mutate(Nuls_vot = Nuls / Votants * 100) %>%
mutate(Exprimés_ins = Exprimés / Inscrits * 100) %>%
mutate (Exprimés_vot = Exprimés / Votants * 100) %>%
mutate(across(c(Inscrits, Abstentions, Votants, Blancs, Nuls, Exprimés, `ARTHAUD`:`DUPONT-AIGNAN`), as.integer)) %>%
select(CodeInsee, CodeDepartement, Commune = `Libellé de la commune`, Inscrits, Abstentions, Abstentions_ins, Votants, Votants_ins,
Blancs, Blancs_ins, Blancs_vot, Nuls, Nuls_ins, Nuls_vot, Exprimés, Exprimés_ins, Exprimés_vot,
`ARTHAUD`:`DUPONT-AIGNAN`, `ARTHAUD.ins`:`DUPONT-AIGNAN.exp`) %>%
as_tibble()
pres_2022_R1_communes_cleaned <- pres_22_R1_communes_cleaned %>%
mutate(CodeDepartement = str_pad(string = `Code du département`, width = 2, side = "left", pad = "0")) %>% # has to be in a format like "02"
mutate(CodeCommune = str_pad(string = `Code de la commune`, width = 3, side = "left", pad = "0")) %>%
mutate(CodeInsee = paste0(CodeDepartement, CodeCommune)) %>%  # unique commune ID
mutate(Votants = Inscrits - Abstentions) %>%
mutate(Votants_ins = Votants / Inscrits * 100) %>%
mutate(Abstentions_ins = Abstentions / Inscrits * 100) %>%
mutate(Blancs_ins = Blancs/ Inscrits * 100) %>%
mutate(Blancs_vot = Blancs / Votants * 100) %>%
mutate(Nuls_ins = Nuls / Inscrits * 100) %>%
mutate(Nuls_vot = Nuls / Votants * 100) %>%
mutate(Exprimés_ins = Exprimés / Inscrits * 100) %>%
mutate (Exprimés_vot = Exprimés / Votants * 100) %>%
mutate(across(c(Inscrits, Abstentions, Votants, Blancs, Nuls, Exprimés, `ARTHAUD`:`DUPONT-AIGNAN`), as.integer)) %>%
select(CodeInsee, CodeDepartement, Commune = `Libellé de la commune`, Inscrits, Abstentions, Abstentions_ins, Votants, Votants_ins,
Blancs, Blancs_ins, Blancs_vot, Nuls, Nuls_ins, Nuls_vot, Exprimés, Exprimés_ins, Exprimés_vot,
`ARTHAUD`:`DUPONT-AIGNAN`, `ARTHAUD.ins`:`DUPONT-AIGNAN.exp`) %>%
as_tibble()
readr::write_excel_csv(pres_2022_R1_communes_cleaned, path = "./data/P2022_Resultats_Communes_T1.csv")
write_excel_csv(pres_2022_R1_communes_cleaned, path = "./data/P2022_Resultats_Communes_T1.csv")
rio::export(pres_2022_R1_communes_cleaned, file = "./data/P2022_Resultats_Communes_T1.xlsx")
View(pres_2022_R1_communes_cleaned)
merged %>%
left_join(cantons, by = c("CodeCanton" = "Code Officiel Canton")) %>%
select(CodeInsee, Commune.x, Commune.y, CodeCanton, `Nom Officiel Canton`) %>%
filter(!is.na(`Nom Officiel Canton`))
rio::import("~/Downloads/table-appartenance-geo-communes-22.xlsx", skip = 5) %>%
as_tibble() %>%
select(CodeInsee = CODGEO, Commune = LIBGEO, CodeCanton = CV) -> table_commune_canton
pres_2022_R1_communes_cleaned %>%
left_join(table_commune_canton, by = "CodeInsee") -> merged
merged %>% filter(is.na(CodeCanton))
rio::import("~/Downloads/georef-france-canton.csv") -> cantons
cantons <- cantons %>% select(`Code Officiel Canton`, `Nom Officiel Canton`)
cantons
cantons %>% arrange(`Code Officiel Canton`)
table_commune_canton
rio::import("~/Downloads/table-appartenance-geo-communes-22.xlsx", skip = 5) %>%
as_tibble()
merged %>%
left_join(cantons, by = c("CodeCanton" = "Code Officiel Canton")) %>%
select(CodeInsee, Commune.x, Commune.y, CodeCanton, `Nom Officiel Canton`) %>%
filter(!is.na(`Nom Officiel Canton`))
merged %>%
left_join(cantons, by = c("CodeCanton" = "Code Officiel Canton")) %>%
select(CodeInsee, Commune = Commune.x, CodeCanton, `Nom Officiel Canton`) %>%
filter(!is.na(`Nom Officiel Canton`))
merged %>%
left_join(cantons, by = c("CodeCanton" = "Code Officiel Canton")) %>%
select(CodeInsee, Commune = Commune.x, CodeCanton, `Libellé Canton`= `Nom Officiel Canton`) %>%
filter(!is.na(`Libellé Canton`))
merged %>%
left_join(cantons, by = c("CodeCanton" = "Code Officiel Canton")) %>%
select(CodeInsee, Commune = Commune.x, CodeCanton, `Libellé Canton`= `Nom Officiel Canton`) %>%
filter(!is.na(`Libellé Canton`)) %>%
arrange(CodeCanton)
merged %>%
left_join(cantons, by = c("CodeCanton" = "Code Officiel Canton")) %>%
select(CodeInsee, Commune = Commune.x, CodeCanton, `Libellé Canton`= `Nom Officiel Canton`) %>%
filter(!is.na(`Libellé Canton`)) %>%
arrange(CodeCanton) -> communes_canton
merged
merged %>%
left_join(canton, by = "CodeCanton")
merged %>%
left_join(communes_canton, by = "CodeCanton")
merged %>%
left_join(cantons, by = c("CodeCanton" = "Code Officiel Canton")) %>%
select(CodeInsee, CommuneCant = Commune.x, CodeCanton, `Libellé Canton`= `Nom Officiel Canton`) %>%
filter(!is.na(`Libellé Canton`)) %>%
arrange(CodeCanton) -> communes_canton
merged %>%
left_join(communes_canton, by = "CodeCanton")
?left-join
?left_join
merged %>%
left_join(communes_canton, by = "CodeCanton")
communes_canton
merged
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton")
communes_canton
merged %>%
left_join(cantons, by = c("CodeCanton" = "Code Officiel Canton")) %>%
select(CodeInsee, CommuneCant = Commune.x, CodeCanton, `Libellé du Canton`= `Nom Officiel Canton`) %>%
filter(!is.na(`Libellé du Canton`)) %>%
arrange(CodeCanton) -> communes_canton
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton")
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y)
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, -ends_with("_ins"), -ends_with("_vot"), -ends_with(".ins"), -ends_with(".exp"))
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, -ends_with("_ins"), -ends_with("_vot"), -ends_with(".ins"), -ends_with(".exp"), everything())
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, -ends_with("_ins"), -ends_with("_vot"), -ends_with(".ins"), -ends_with(".exp"), everything())
?ends_with
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, ends_with(c("_ins", "_vot", ".ins", ".exp"))
;
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, ends_with(c("_ins", "_vot", ".ins", ".exp"))
)
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, ends_with(c("_ins", "_vot", ".ins", ".exp")))
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, -ends_with(c("_ins", "_vot", ".ins", ".exp")))
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, -ends_with(c("_ins", "_vot", ".ins", ".exp")), evrything())
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, -ends_with(c("_ins", "_vot", ".ins", ".exp")), everything())
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, everything())
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(-ends_with(c("_ins", "_vot", ".ins", ".exp"))
)
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(-ends_with(c("_ins", "_vot", ".ins", ".exp"))) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, everything())
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton")
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(-ends_with(c("_ins", "_vot", ".ins", ".exp"))) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, everything())
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(-ends_with(c("_ins", "_vot", ".ins", ".exp"))) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, everything()) -> cantons_cleaned
View(cantons_cleaned)
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton") %>%
rename(Commune = Commune.x)
merged
head(merged)
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton")
communes_canton
cantons %>% arrange(`Code Officiel Canton`)
communes_canton
select(communes_canton, CodeCanton, `Libellé du Canton`)
merged %>%
right_join(select(communes_canton, CodeCanton, `Libellé du Canton`), by = "CodeCanton")
communes_canton
communes_canton, CodeCanton, `Libellé du Canton`)
select(communes_canton, CodeCanton, `Libellé du Canton`)
select(communes_canton, CodeCanton, `Libellé du Canton`) %>% distinct()
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`) %>% distinct(), by = "CodeCanton")
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`) %>% distinct(), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(-ends_with(c("_ins", "_vot", ".ins", ".exp"))) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, everything())
merged
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`) %>% distinct(), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(-ends_with(c("_ins", "_vot", ".ins", ".exp"))) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, everything())
?summarise
# créer des cantons
cantons_cleaned %>%
group_by(CodeCanton) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x)))
# créer des cantons
cantons_cleaned %>%
group_by(CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x)))
# créer des cantons
cantons_cleaned %>%
group_by(CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x))) %>% View(.)
cantons_cleaned %>% filter(`Libellé du Canton` == "Ambérieu-en-Bugey")
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`) %>% distinct(), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(-ends_with(c("_ins", "_vot", ".ins", ".exp"))) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, everything()) -> cantons_cleaned
summarise(across(c(Inscrits:POUTOU), ~sum(.x)))
# créer des cantons
cantons_cleaned %>%
group_by(CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x)))
# créer des cantons
cantons_cleaned %>%
group_by(CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x))) %>% arrange(desc(Inscrits))
# créer des cantons
cantons_cleaned %>%
group_by(CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x))) %>% arrange(desc(Inscrits)) %>% VIew(.)
# créer des cantons
cantons_cleaned %>%
group_by(CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x))) %>% arrange(desc(Inscrits)) %>% View(.)
cantons_cleaned
cantons_cleaned %>% filter(is.na(CodeCanton))
cantons_cleaned %>% filter(is.na(CodeCanton)) %>% View(.)
table_commune_canton
table_commune_canton %>% filter(Commune == "Les Abymes")
table_commune_canton
pres_2022_R1_communes_cleaned
table_commune_canton
# créer des cantons
cantons_cleaned %>%
group_by(CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x)))
# créer des cantons
cantons_cleaned %>%
group_by(CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x))) %>% filter(is.na(CodeCanton))
merged %>% filter(is.na(CodeCanton))
table_commune_canton
rio::import("~/Downloads/table-appartenance-geo-communes-22.xlsx", skip = 5) %>%
as_tibble()
rio::import("~/Downloads/table-appartenance-geo-communes-22.xlsx", skip = 5) %>%
as_tibble() %>%
select(CodeInsee = CODGEO, Commune = LIBGEO, DEP, CodeCanton = CV) -> table_commune_canton
# outremer
table_commune_canton
unique(table_commune_canton$DEP)
merged %>% filter(is.na(CodeCanton))
communes_canton
pres_2022_R1_communes_cleaned
unique(pres_2022_R1_communes_cleaned$CodeDepartement)
filter(pres_2022_R1_communes_cleaned, CodeDepartement %in% c("ZA", "ZB", "ZC", "ZD", "ZM", "ZN", "ZP", "ZS", "ZW", "ZX"))
filter(pres_2022_R1_communes_cleaned, CodeDepartement %in% c("ZA", "ZB", "ZC", "ZD", "ZM", "ZN", "ZP", "ZS", "ZW", "ZX")) %>% View(.)
table_commune_canton %>% filter(Commune %in% c("Les Abymes"))
filter(pres_2022_R1_communes_cleaned, CodeDepartement %in% c("ZA", "ZB", "ZC", "ZD", "ZM", "ZN", "ZP", "ZS", "ZW", "ZX"))
table_commune_canton
unique(table_commune_canton$DEP)
rio::import("~/Downloads/table-appartenance-geo-communes-22.xlsx", skip = 5) %>%
as_tibble() %>%
select(CodeInsee = CODGEO, Commune = LIBGEO, CodeCanton = CV) -> table_commune_canton
pres_2022_R1_communes_cleaned %>%
filter(CodeDepartement %in% c("ZA", "ZB", "ZC", "ZD", "ZM", "ZN", "ZP", "ZS", "ZW", "ZX")) %>%
left_join(table_commune_canton, by = "CodeInsee") -> merged
merged
pres_2022_R1_communes_cleaned %>%
filter(!CodeDepartement %in% c("ZA", "ZB", "ZC", "ZD", "ZM", "ZN", "ZP", "ZS", "ZW", "ZX")) %>%
left_join(table_commune_canton, by = "CodeInsee") -> merged
merged
merged %>% filter(is.na(CodeCanton))
cantons
merged %>%
left_join(cantons, by = c("CodeCanton" = "Code Officiel Canton")) %>%
select(CodeInsee, CommuneCant = Commune.x, CodeCanton, `Libellé du Canton`= `Nom Officiel Canton`) %>%
filter(!is.na(`Libellé du Canton`)) %>%
arrange(CodeCanton)
merged %>%
left_join(cantons, by = c("CodeCanton" = "Code Officiel Canton")) %>%
select(CodeInsee, CommuneCant = Commune.x, CodeCanton, `Libellé du Canton`= `Nom Officiel Canton`) %>%
filter(!is.na(`Libellé du Canton`)) %>%
arrange(CodeCanton) -> communes_canton
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`) %>% distinct(), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(-ends_with(c("_ins", "_vot", ".ins", ".exp"))) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, everything())
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`) %>% distinct(), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(-ends_with(c("_ins", "_vot", ".ins", ".exp"))) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, everything()) -> cantons_cleaned
# créer des cantons
cantons_cleaned %>%
group_by(CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x)))
cantons_cleaned
# créer des cantons
cantons_cleaned %>%
group_by(CodeDepartement, CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x)))
# créer des cantons
cantons_cleaned %>%
group_by(CodeDepartement, CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x))) %>% filter(is.na(CodeCanton))
cantons$`Code Officiel Canton`
length(cantons$`Code Officiel Canton`)
length(communes_canton$CodeCanton)
length(unique(communes_canton$CodeCanton))
# créer des cantons
cantons_cleaned %>%
group_by(CodeDepartement, CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x)))
# créer des cantons
cantons_cleaned %>%
group_by(CodeDepartement, CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x))) %>% View(x = )
table_commune_canton
table_commune_canton %>% filter(CodeCanton == "0694")
cantons
cantons
# créer des cantons
cantons_cleaned %>%
group_by(CodeDepartement, CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x)))
# créer des cantons
cantons_cleaned %>%
group_by(CodeDepartement, CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x))) %>%
filter(is.na(CodeCanton))
cantons_cleaned %>%
group_by(CodeDepartement, CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x)))
# créer des cantons
cantons_cleaned %>%
group_by(CodeDepartement, CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x))) %>%
filter(is.na(Libellé du Canton))
# créer des cantons
cantons_cleaned %>%
group_by(CodeDepartement, CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x))) %>%
filter(is.na(`Libellé du Canton`))
cantons
cantons %>% filter(Canton=="0199")
cantons %>% filter(Canton==0199)
cantons
cantons %>% arrange(`Code Officiel Canton`)
merged %>%
left_join(select(communes_canton, CodeCanton, `Libellé du Canton`) %>% distinct(), by = "CodeCanton") %>%
rename(Commune = Commune.x) %>%
select(-Commune.y) %>%
select(-ends_with(c("_ins", "_vot", ".ins", ".exp"))) %>%
select(CodeInsee, CodeDepartement, CodeCanton, `Libellé du Canton`, Commune, everything())
cantons_cleaned %>% View()
rio::import("~/Downloads/georef-france-canton.csv")
rio::import("~/Downloads/georef-france-canton.csv")
rio::import("~/Dropbox/Table_de_correspondance_circo_legislatives2017-1 (1).xlsx")
rio::import("~/Downloads/Table_de_correspondance_circo_legislatives2017-1 (1).xlsx")
# créer des cantons
cantons_cleaned %>%
group_by(CodeDepartement, CodeCanton, `Libellé du Canton`) %>%
summarise(across(c(Inscrits:POUTOU), ~sum(.x))) %>%
filter(is.na(`Libellé du Canton`))
